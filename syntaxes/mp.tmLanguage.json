{
	"$schema": "https://raw.githubusercontent.com/martinring/tmlanguage/master/tmlanguage.json",
	"scopeName": "source.mp",
	"name": "MP",
	"patterns": [
		{
			"include": "#comment"
		},
		{
			"begin": "(<!--)",
			"beginCaptures": {
				"0": {"name":"comment.block.html"}
			},
			"end": "(-->)",
			"endCaptures": {
				"0": {"name":"comment.block.html"}
			},
			"patterns": [
				{
					"include": "#regex"
				},
				{
					"include": "#string"
				},
				{
					"match": "(MPIF|MPELSEIF|MPELSE|MPLOOP|MPVAR|MPBLOCK|MPFUNCTION|MPLIB|MPINIT|MPBREAK|\\$INCLUDE)",
					"name": "keyword.control.mp"
				},
				{
					"match": "(MPENDIF|MPENDLOOP|MPENDVAR|MPENDBLOCK)",
					"name": "keyword.control.mp"
				},
				{
					"include": "#function"
				},
				{
					"include": "#constant"
				},
				{
					"include": "#variable"
				}
			]
		},
		{
			"include": "text.html.basic"
		},
		{
			"include": "text.html.derivative"
		}
	],
	"repository": {
		"mod-perl": {
			"patterns": [
				{"include":"#function"},
				{"include":"#variable"},
				{"include":"mod-perl#mpstring"},
				{"include":"#mpstring"}
			]
		},
        "comment": {
            "patterns": [{
                    "begin": "/\\*",
                    "end": "\\*/",
                    "name": "comment.block.mp"
            }]
		},
		"function": {
			"patterns": [
				{
					"match": "(\\w+)\\(",
					"captures": {
						"1": {"name":"entity.name.function.mp"}
					}
				}
			]
		},
		"constant": {
			"patterns": [
				{
					"match": "(\\-?\\d+\\.?\\d?)",
					"captures": {
						"1": {"name": "constant.numeric.mp"}
					}
				}
			]
		},
		"variable": {
			"patterns": [
				{
					"match": "(\\$\\{)(\\w+)(\\})",
					"captures":{
						"1": {"name": "punctuation.definition.tag.mp"},
						"2": {"name": "storage.type.var.mp"},
						"3": {"name": "punctuation.definition.tag.mp"}
					}
				},
				{
					"match": "(\\$\\w+)",
					"captures":{
						"1": {"name":"storage.type.var.mp"}
					}
				},
				{
					"match": "(\\w+)",
					"captures": {
						"1": {"name": "storage.type.var.mp"}
					}
				}
			]
		},
		"string": {
			"patterns": [
				{
                    "begin": "'",
                    "end": "'",
                    "name": "string.quoted.single.mp"
				},
				{
					"begin": "\"",
					"end": "\"",
					"name": "string.quoted.double.mp"
				}
			]
		},
		"regex": {
			"patterns": [
				{
					"match": "[a-zA-Z]?/.*/?.*?/[a-zA-Z]?",
					"name": "string.regexp"
				}
			]
		}
    }
}